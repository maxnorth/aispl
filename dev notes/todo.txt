global variables? library, site, defined in componenets? url variables?

maybe url variables are available globally, but if there is a conflict, the repeater wins, and the url arg can be accessed on a "url" variable

inheritance tree: url < library/site <  repeater locals
or is it library/site < url < repeater locals
every component has a url getter/setter?

two ways to access library data: string (path) syntax, and object syntax, where the properties of each directory are the items themselves,
and each item has a "$" property containing attributes of that directory.

need more strength with angular 2 generally. more router knowledge.
    - how to generate component without root element, in the style of templateref
    - component inheritance
    - custom router directive, overriding href
    -

setUrl() global function?
or even make url object also be a  function? url("") or a getter/setter? url = "my/new/url"

scope.$eval => with(this) Function(method.toString())

open source? license? npm module structure? custom commands? readme documentation?

azure hosting support?

styles? site styles vs pattern styles?

